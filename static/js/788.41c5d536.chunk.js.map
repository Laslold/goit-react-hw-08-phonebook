{"version":3,"file":"static/js/788.41c5d536.chunk.js","mappings":"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","sources":["components/modules/Contacts/ContactForm/filds.js","components/modules/Contacts/ContactForm/ContactForm.jsx","components/modules/Contacts/Container/Container.jsx","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","components/modules/Contacts/ContactList/ContactList.jsx","components/modules/Contacts/Filter/fild.js","components/modules/Contacts/Filter/Filter.jsx","redux/phoneBook/phoneBook-selector.js","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const filds = {\n  name: {\n    label: 'Name:',\n    name: 'name',\n    type: 'text',\n    placeholder: 'Input name',\n    required: true,\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    margin: 'normal',\n    style: {\n      backgroundColor: '#fff',\n      borderRadius: '4px',\n    },\n  },\n  number: {\n    label: 'Number',\n    name: 'number',\n    type: 'text',\n    placeholder: 'Input number',\n    required: true,\n    margin: 'normal',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n\n    style: {\n      backgroundColor: '#fff',\n      borderRadius: '4px',\n    },\n  },\n};\n","import { useState } from 'react';\nimport { filds } from './filds';\nimport PropTypes from 'prop-types';\nimport { Box, Button } from '@mui/material';\nimport TextFilds from '../../../../shared/component/TextFild/';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setContact(prevContact => ({\n      ...prevContact,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...contact });\n    setContact({\n      name: '',\n      number: '',\n    });\n  };\n  const { name, number } = contact;\n  return (\n    <Box\n      component=\"form\"\n      noValidate\n      sx={{ mt: 1 }}\n      onSubmit={handleSubmit}\n      action=\"\"\n      method=\"get\"\n    >\n      <TextFilds\n        onChange={handleChange}\n        value={name}\n        {...filds.name}\n        fullWidth\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n\n      <TextFilds\n        onChange={handleChange}\n        value={number}\n        {...filds.number}\n        fullWidth\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n\n      <div>\n        <Button variant=\"contained\" type=\"submit\">\n          Add contact\n        </Button>\n      </div>\n    </Box>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import { Box, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ title, children }) => {\n  return (\n    <Box>\n      <Typography component=\"h1\" variant=\"h3\">\n        {title}\n      </Typography>\n      {children}\n    </Box>\n  );\n};\nexport default Container;\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        '& > :not(style) ~ :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import { Box, Button, Stack, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, removeContact }) => {\n  const elem = contacts.map(({ id, name, number }) => (\n    <Stack spacing={2} p={1} key={id}>\n      <Typography component=\"h4\" variant=\"h5\">\n        <p>{name} : </p>{' '}\n      </Typography>\n      <Typography component=\"h4\" variant=\"h5\" sx={{ textAlign: 'right' }}>\n        <p>{number} </p>\n      </Typography>\n\n      <Button onClick={() => removeContact(id)} variant=\"contained\">\n        Delete\n      </Button>\n    </Stack>\n  ));\n  return <Box sx={{ width: '100%' }}>{elem}</Box>;\n};\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","export const fild = {\n  filter: {\n    label: 'Filter',\n    name: 'filter',\n    type: 'text',\n    placeholder: 'Input contacts',\n    required: true,\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    margin: 'normal',\n    style: {\n      backgroundColor: '#fff',\n      borderRadius: '4px',\n    },\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TextFilds from '../../../../shared/component/TextFild/TextFild';\nimport { fild } from './fild';\nimport { Typography } from '@mui/material';\n\nconst Filter = ({ value, onChange }) => (\n  <div style={{ marginTop: '20px' }}>\n    <Typography component=\"h2\" variant=\"h5\">\n      Find contacts by name\n    </Typography>\n    <TextFilds\n      value={value}\n      onChange={onChange}\n      {...fild.filter}\n      fullWidth\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    />\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","export const getContacts = (store) => {\n  return store.phoneBook.contacts;\n};\n\nexport const getFilterContacts = (store) => {\n  const { contacts, filter } = store.phoneBook;\n\n  if (!filter) {\n    return contacts;\n  }\n\n  const normalize = (value) => {\n    return value.toLowerCase();\n  };\n\n  return contacts.filter((item) =>\n    normalize(item.name).includes(normalize(filter.trim()))\n  );\n};\n\nexport const getFilter = (store) => {\n  return store.phoneBook.filter;\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport ContactForm from '../../modules/Contacts/ContactForm';\nimport Container from '../../modules/Contacts/Container';\nimport ContactList from '../../modules/Contacts/ContactList';\nimport Filter from '../../modules/Contacts/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filter } from '../../../redux/phoneBook/phoneBook-slice';\nimport {\n  getFilterContacts,\n  getFilter,\n} from '../../../redux/phoneBook/phoneBook-selector';\nimport {\n  addContactsThunk,\n  deleteContactsThunk,\n  fetchContactsThunk,\n} from '../../../redux/phoneBook/phoneBook-operation';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst defaultTheme = createTheme();\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilterContacts);\n  const filterValue = useSelector(getFilter);\n\n  const onAddContacts = data => {\n    const isInclude = contacts.find(\n      ({ name }) => name.toLowerCase() === data.name.toLowerCase()\n    );\n    if (!isInclude) {\n      dispatch(addContactsThunk(data));\n      return;\n    }\n    alert(`${isInclude.name} is already in contacts`);\n    return;\n  };\n\n  const onRemoveContact = id => {\n    dispatch(deleteContactsThunk(id));\n  };\n\n  const onChangeFilter = ({ target }) => {\n    dispatch(filter(target.value));\n  };\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={5}\n          sx={{\n            backgroundImage:\n              'url(https://source.unsplash.com/random?wallpapers)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            position: 'relative',\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              top: ' 50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              color: '#fff',\n            }}\n          >\n            <Container title=\"Phonebook\">\n              <ContactForm onSubmit={onAddContacts} />\n              <Filter onChange={onChangeFilter} value={filterValue} />\n            </Container>\n          </Box>\n        </Grid>\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <div>\n              <div>\n                <Container title=\"Contacts\">\n                  <ContactList\n                    contacts={contacts}\n                    removeContact={onRemoveContact}\n                  />\n                </Container>\n              </div>\n            </div>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n// }\n\nexport default ContactsPage;\n"],"names":["filds","label","name","type","placeholder","required","pattern","margin","style","backgroundColor","borderRadius","onSubmit","useState","number","contact","setContact","handleChange","target","value","prevContact","Box","component","noValidate","sx","mt","e","preventDefault","action","method","TextFild","onChange","fullWidth","title","Button","variant","children","Typography","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","React","filter","Boolean","reduce","output","child","index","push","length","key","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","useFlexGap","gap","getValue","row","column","mergeBreakpointsInOrder","Stack","options","createStyledComponent","useThemeProps","componentName","useUtilityClasses","composeClasses","generateUtilityClass","StackRoot","inProps","ref","themeProps","extendSxProp","divider","className","other","_objectWithoutPropertiesLoose","classes","_jsx","as","clsx","createStack","styled","contacts","removeContact","elem","map","id","p","textAlign","onClick","width","fild","marginTop","getFilterContacts","store","phoneBook","normalize","toLowerCase","item","includes","trim","getFilter","dispatch","useDispatch","useSelector","filterValue","useEffect","fetchContactsThunk","ThemeProvider","Grid","container","height","CssBaseline","xs","sm","md","backgroundImage","backgroundRepeat","t","palette","mode","grey","backgroundSize","backgroundPosition","position","top","left","transform","color","data","isInclude","find","alert","addContactsThunk","Paper","elevation","square","my","mx","alignItems","deleteContactsThunk"],"sourceRoot":""}